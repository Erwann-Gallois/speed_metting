security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
            algorithm: auto # Garder auto pour choisir le meilleur algorithme disponible
            # Pour bcrypt
            cost: 12 # Un coût entre 10 et 14 est généralement recommandé
            # Pour argon2id (si disponible et choisi automatiquement)
            time_cost: 4 # Augmenter pour plus de sécurité, en fonction de la performance acceptable
            memory_cost: 65536 # Augmenter pour utiliser plus de mémoire lors du hachage
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            form_login:
                login_path: connexion
                check_path: connexion
                enable_csrf: true
            logout:
                path: deconnexion
                # where to redirect after logout
                target: accueil
            remember_me:
                secret:   '%kernel.secret%' # required
                lifetime: 604800 # 1 week in seconds

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
    role_hierarchy:
        ROLE_ADMIN : ROLE_ORGANISATEUR
        ROLE_ORGANISATEUR: [ROLE_ELEVE, ROLE_PROFESSIONNEL]
        ROLE_ELEVE, ROLE_PROFESSIONNEL : ROLE_FREEACCESS


